name: electron

on:
  push:
    tags:
      - '*'

jobs:
  app:
    strategy:
      matrix:
        os: [ windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          # 选择要使用的 node 版本
          node-version: '16'


      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list




      # 如果缓存没有命中，安装依赖
      - name: Install dependencies
        run: npm ci --include=dev
      - name: release
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 运行构建脚本
#      - name: Build & release
#        run: |
      # npm run release 在electron-builder中使用特定的npm run release 会自动把打包的文件上传到github release中
      # 在这里，因为需要将指定
#          npm run build+release

#      - name: release
#        uses: softprops/action-gh-release@v1
#        with:
#          draft: true
#          files: |
#            dist/*.exe
#            dist/*.zip
#            dist/*.dmg
#            dist/*.AppImage
#            dist/*.snap
#            dist/*.deb
#            dist/*.rpm
#            dist/*.tar.gz
#            dist/*.yml
#            dist/*.blockmap
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


